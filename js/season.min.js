"use strict";class Season{constructor(){this.list=JSON.parse(localStorage.getItem("season"))??{},this.set().then((e=>{for(let t in this.list){let s=e[t];s&&(CAL.shows[s]=[!1,!1],delete this.list[t],localStorage.setItem("season",JSON.stringify(this.list)))}localStorage.setItem("shows",JSON.stringify(CAL.shows))}))}async set(){return await(await fetch("shows/keys.json")).json()}async init(){let e=document.createElement("div");e.id="season",e.tabIndex=1,document.body.append(e);let t=await(await fetch("season/shows.json")).json(),s=0;for(let n in"Your List"==document.getElementById("list").innerHTML?t:this.list){let i=document.createElement("div");i.className="show-season";let l=document.createElement("table");l.className="info";let r=document.createElement("tr"),o=document.createElement("th");o.innerHTML=n,r.append(o),l.append(r);for(let r in t[n])switch(r){case"cover":let o=document.createElement("div");o.className="cover-season",o.align="right";let a=document.createElement("img");if(a.src=t[n][r],a.width=340,a.height=440,2<s){a.src+="?w=5&h=5",new IntersectionObserver(((e,t)=>{e.forEach((e=>{if(!e.isIntersecting)return;let s=e.target;s.src=s.src.substring(0,s.src.length-8),t.unobserve(s)}))}),{root:e,rootMargin:"500px 0px"}).observe(a),a.loading="lazy"}else s++;o.append(a),i.append(o);break;case"Genres":l.append(this.row(r,t[n][r].join(", ")));break;default:l.append(this.row(r,t[n][r]))}let a=document.createElement("button");a.innerHTML=n in this.list?"Remove":"Add",a.onclick=e=>{let t=e.srcElement.previousElementSibling.childNodes[0].innerText;if(t in this.list)delete this.list[t],e.srcElement.innerHTML="Add";else{this.list[t]=null,e.srcElement.innerHTML="Remove";let s={};for(let e of Object.keys(this.list).sort())s[e]=null;this.list=s}localStorage.setItem("season",JSON.stringify(this.list))},i.append(l),i.append(a),e.append(i)}}row(e,t){let s=document.createElement("tr"),n=document.createElement("td");return n.innerHTML=e+": "+t,s.append(n),s}}
