"use strict";class Season{constructor(){this.set=async()=>(await fetch("shows/keys.json")).json(),this.row=(e,t)=>{const s=document.createElement("tr"),n=document.createElement("td");return n.innerHTML=`${e}: ${t}`,s.append(n),s},this.list=JSON.parse(localStorage.getItem("season"))??{},this.set().then((e=>{Object.keys(this.list).forEach((t=>{const s=e[t];s&&(CAL.shows[s]=[!1,!1],delete this.list[t],localStorage.setItem("season",JSON.stringify(this.list)))})),localStorage.setItem("shows",JSON.stringify(CAL.shows))}))}async init(){const e=document.createElement("div");e.id="season",e.tabIndex=1,document.body.append(e);const t=await(await fetch("season/shows.json")).json();let s=0;Object.keys("Your List"===document.getElementById("list").innerHTML?t:this.list).forEach((n=>{const o=document.createElement("div");o.className="show-season";const i=document.createElement("table");i.className="info";const c=document.createElement("tr"),a=document.createElement("th");a.innerHTML=n,c.append(a),i.append(c),Object.keys(t[n]).forEach((c=>{switch(c){case"cover":{const i=document.createElement("div");i.className="cover-season";const a=document.createElement("img");if(a.src=t[n][c],a.width=340,a.height=440,s>2){a.src+="?w=5&h=5";new IntersectionObserver(((e,t)=>{e.forEach((e=>{if(!e.isIntersecting)return;const s=e.target;s.src=s.src.substring(0,s.src.length-8),t.unobserve(s)}))}),{root:e,rootMargin:"500px 0px"}).observe(a),a.loading="lazy"}else s++;i.append(a),o.append(i);break}case"Genres":i.append(this.row(c,t[n][c].join(", ")));break;default:i.append(this.row(c,t[n][c]))}}));const r=document.createElement("button");r.innerHTML=n in this.list?"Remove":"Add",r.onclick=e=>{const t=e.target.previousElementSibling.childNodes[0].innerText;if(t in this.list)delete this.list[t],e.target.innerHTML="Add";else{this.list[t]=null,e.target.innerHTML="Remove";const s={};Object.keys(this.list).sort().forEach((e=>{s[e]=null})),this.list=s}localStorage.setItem("season",JSON.stringify(this.list))},o.append(i),o.append(r),e.append(o)}))}}
