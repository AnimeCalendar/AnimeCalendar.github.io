"use strict";class Season{constructor(){this.row=(e,t)=>{const s=document.createElement("tr"),n=document.createElement("td");return n.innerHTML=`${e}: ${t}`,s.append(n),s},this.list=JSON.parse(localStorage.getItem("season"))??{},Object.keys(this.list).forEach((e=>{e in CAL.store&&(CAL.shows[e]=[!1,!1],delete this.list[e])})),localStorage.setItem("season",JSON.stringify(this.list)),localStorage.setItem("shows",JSON.stringify(CAL.shows))}async init(){const e=document.createElement("div");e.id="season",e.tabIndex=1,document.body.append(e);const t=await(await fetch("season/shows.json")).json();let s=0;Object.keys("Your List"===document.getElementById("list").innerHTML?t:this.list).forEach((n=>{const i=document.createElement("div");i.className="show-season";const o=document.createElement("table");o.className="info",Object.keys(t[n]).forEach((r=>{switch(r){case"title":{const e=document.createElement("tr"),s=document.createElement("th");s.innerHTML=t[n].title,e.append(s),o.append(e);break}case"cover":{const o=document.createElement("div");o.className="cover-season";const a=document.createElement("img");if(a.src=t[n][r],a.width=340,a.height=440,s>2){a.src+="?w=5&h=5";new IntersectionObserver(((e,t)=>{e.forEach((e=>{if(!e.isIntersecting)return;const s=e.target;s.src=s.src.substring(0,s.src.length-8),t.unobserve(s)}))}),{root:e,rootMargin:"500px 0px"}).observe(a),a.loading="lazy"}else s++;o.append(a),i.append(o);break}case"Genres":o.append(this.row(r,t[n][r].join(", ")));break;default:o.append(this.row(r,t[n][r]))}}));const r=document.createElement("button");r.innerHTML=n in this.list?"Remove":"Add",r.setAttribute("key",n),r.onclick=e=>{const s=e.target.attributes.getNamedItem("key").value;s in this.list?(delete this.list[s],e.target.innerHTML="Add"):(this.list[s]=t[s].title.substring(0,10),e.target.innerHTML="Remove",this.list=Object.fromEntries(Object.entries(this.list).sort(((e,t)=>e[1]<t[1]?0:1)))),localStorage.setItem("season",JSON.stringify(this.list))},i.append(o),i.append(r),e.append(i)}))}}
